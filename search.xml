<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TinyRSIC-V环境搭建</title>
      <link href="/2023/06/20/RISCV/TInyRISC-V/tinyrsic-v%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/06/20/RISCV/TInyRISC-V/tinyrsic-v%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Python环境"><a href="#Python环境" class="headerlink" title="Python环境"></a>Python环境</h1><h2 id="Python3-8安装"><a href="#Python3-8安装" class="headerlink" title="Python3.8安装"></a>Python3.8安装</h2><p>ubuntu22.04的默认python版本为3.1，版本比较老，因此需要安装高版本的python，首先可以查看Linux自带的Ubuntu版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Terminal输入：</span><br><span class="line">ls -l /usr/bin | grep python</span><br></pre></td></tr></table></figure><p><img src="https://img.picgo.net/2023/06/21/2023062123242319c7a586188e864e.png" alt="Ubuntu自带Python"></p><p>可以看到自带版本确实比较老，需要更新，但是直接安装显示没有源中没有Python3.8版本<br><img src="https://img.picgo.net/2023/06/21/202306212326253bcaf0c96c067092.png" alt="直接安装"></p><p>因此此处需要手动安装的模式，可以在<a href="https://www.python.org/ftp/python">官网</a>查看所需要的python版本，我们选择的版本为python3.8，选择tgz压缩文件版本。<br>步骤一：在python官网找到所需要的压缩版本文件，官网地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 按照需要下载</span><br><span class="line">https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz</span><br></pre></td></tr></table></figure><p>步骤二：下载安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Terminal 输入</span><br><span class="line">wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz</span><br></pre></td></tr></table></figure><p>输入完成后即进入漫长的下载过程，如果提示Response Error那么可以多尝试几次</p><p><img src="https://img.picgo.net/2023/06/21/20230621234757a61e655f894e803a.png" alt="安装Python3.8"></p><p>步骤三：解压安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Python-3.8.0.tgz</span><br></pre></td></tr></table></figure><p>步骤四：切换到解压后的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.8.0</span><br></pre></td></tr></table></figure><p>步骤五：运行配置指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line"># 或者--preifx后添加的是自己的安装目录，根据自己选择安装位置</span><br><span class="line">./configure --prefix=/edatools/python3.8</span><br></pre></td></tr></table></figure><p>可能会提示系统没有添加C编译器，安装gcc-c++即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装C编译器</span><br><span class="line">sudo apt-get install gcc</span><br><span class="line"># 顺便安装C++编译器</span><br><span class="line">sudo apt-get install g++</span><br></pre></td></tr></table></figure><p>步骤六：安装make</p><p>如果输入make，出现没有make指令需要下载make</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install make</span><br></pre></td></tr></table></figure><p>步骤七：运行安装指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Terminal 运行</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>如果步骤五是直接运行./config，那么安装后的可执行文件默认放在/usr/local/bin,python的库文件放在/usr/local/lib，配置文件默认放在/usr/local/include，其他的资源文件放在/usr/local/share。</p><p>如果步骤五选择了–prefix的指令，那么添加的文件均在–prefix所在目录下。</p><p>步骤八：添加环境变量</p><p>如果步骤五选择了–prefix那么需要重新添加环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 此处为我设置的环境变量，按照自己步骤五设置即可</span><br><span class="line">PATH=$PATH:$HOME/bin:/edatools/python3.8/bin</span><br></pre></td></tr></table></figure><p>添加完成后可以查看环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><p>步骤九：进入安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 目录是--prefix所设置的路径</span><br><span class="line">cd /edatools/python/lib</span><br></pre></td></tr></table></figure><p>进入路径后即可看到python3.8的程序<br><img src="https://img.picgo.net/2023/06/22/20230622001802bbf5a126fa1ba43b.png" alt="Python3.8路径"></p><h2 id="更新Python的指向"><a href="#更新Python的指向" class="headerlink" title="更新Python的指向"></a>更新Python的指向</h2><p>下载完成后需要将系统默认的Python版本指向新下载的Python3.8</p><p>步骤一： 查看默认python命令指向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /usr/bin | grep python</span><br></pre></td></tr></table></figure><p>可以看到虽然我们安装了新的Python3.8但是系统默认还是指向Python3.1<br><img src="https://img.picgo.net/2023/06/22/2023062200221296e37884d64b7b48.png" alt="Python指向"></p><p>步骤二：备份原本的python指向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 如果上一步显示没有python即可跳过此步骤</span><br><span class="line"># 或者只显示python3没有显示python也可跳过</span><br><span class="line">mv /usr/bin/python /usr/bin/python.bak</span><br></pre></td></tr></table></figure><p>步骤三：建立新连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 此处的连接指向自己的安装目录</span><br><span class="line">ln -s /edatools/python3.8/bin/python3.8 /usr/bin/python</span><br></pre></td></tr></table></figure><p>步骤四： 验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Terminal 输入</span><br><span class="line">python</span><br></pre></td></tr></table></figure><p>如果显示一下画面则表示指向成功：</p><p><img src="https://img.picgo.net/2023/06/22/20230622003905d111b588ee967321.png" alt="正确连接"></p><h1 id="iverilog安装"><a href="#iverilog安装" class="headerlink" title="iverilog安装"></a>iverilog安装</h1><p>iverilog是一个轻量级的RTL仿真工具，如果电脑中有vcs、verdi即可不需要下载，对于不想折腾synopsys安装的同学可以使用该开源工具进行仿真、查看波形。</p><h2 id="Git-源码"><a href="#Git-源码" class="headerlink" title="Git 源码"></a>Git 源码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 如果系统中没有git需要提前下载git</span><br><span class="line">sudo apt-get install git</span><br><span class="line"># 下载iverilog源码</span><br><span class="line">git clone https://github.com/steveicarus/iverilog.git</span><br></pre></td></tr></table></figure><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><p>本工程需要使用v11版本以上的分支，因此需要切换iverilog的分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 切换分支</span><br><span class="line">git checkout v11-branch</span><br></pre></td></tr></table></figure><p>分支切换的时候可能会显示：</p><p><img src="https://img.picgo.net/2023/06/22/2023062201034321ab43bf2b0279e0.png" alt="切换分支"></p><p>出现该问题的原因是因为文件的所有者为作者本身，和我们用户的用户名不一致，按照提示修改然后再输入切换分支命令即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --add safe.directory /edatools/iverlog</span><br></pre></td></tr></table></figure><h2 id="安装运行依赖"><a href="#安装运行依赖" class="headerlink" title="安装运行依赖"></a>安装运行依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install autoconf gperf flex bison build-essential</span><br></pre></td></tr></table></figure><h2 id="编译安装iverilog和vvp"><a href="#编译安装iverilog和vvp" class="headerlink" title="编译安装iverilog和vvp"></a>编译安装iverilog和vvp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 最好提前进入root用户，或者每个指令前添加sudo</span><br><span class="line">sh autoconf.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h1 id="安装Gtkwave"><a href="#安装Gtkwave" class="headerlink" title="安装Gtkwave"></a>安装Gtkwave</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gtkwave</span><br></pre></td></tr></table></figure><h1 id="安装GUN工具链"><a href="#安装GUN工具链" class="headerlink" title="安装GUN工具链"></a>安装GUN工具链</h1><p>可以从百度网盘下载(链接：<a href="https://gitee.com/link?target=https://pan.baidu.com/s/10uLZYf_cgtH94kZI_N6JhQ">https://pan.baidu.com/s/10uLZYf_cgtH94kZI_N6JhQ</a> 提取码：uk0w)或者自行下载其他版本的。在自己电脑安装完成后如果vmtools生效可以直接拖到虚拟机，如果不可以则可以通过MobaXterm开启ssh访问后远程上传即可。上传完成后解压文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf risc64(该文件名称)</span><br></pre></td></tr></table></figure><p>解压完成后即可看到编译所需要的库文件<br><img src="https://img.picgo.net/2023/06/22/2023062202012016a3b0f1a1488127.png" alt="GUN库"></p><h1 id="下载TinyRISC-V工程"><a href="#下载TinyRISC-V工程" class="headerlink" title="下载TinyRISC-V工程"></a>下载TinyRISC-V工程</h1><p>上述工作即搭建了TinyRISC-V运行所需要的环境，上述工作完成后即可下载TinyRISC-V源码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/liangkangnan/tinyriscv.git</span><br></pre></td></tr></table></figure><p>下载完成后，进入文件夹即可看到TinyRISC-V工程源码：</p><p><img src="https://img.picgo.net/2023/06/22/202306220210005b1fdaf479e79519.png" alt="TinyRISC-V工程"></p><p>下载到源码后，我们需要将上一章节安装的GUN工具链复制到TinyRISC-V工程文件的tools目录下。</p><h1 id="运行测试程序"><a href="#运行测试程序" class="headerlink" title="运行测试程序"></a>运行测试程序</h1><p>在之上所有工作完成后，即可运行测试代码检测安装环境的正确性。打开TinyRISC-V工程目录下的sim文件简单运行一个测试脚本。</p><p><img src="https://img.picgo.net/2023/06/22/20230622021649716cb707bd3824da.png" alt="sim目录"></p><p>图上sim_new_nowave.py即为我们需要测试的脚本，运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Python后的第一个参数为我们需要测试的指令集，第二个参数为输出文件</span><br><span class="line">python sim_new_nowave.py ../tests/isa/generated/rv32ui-p-add.bin inst.data</span><br></pre></td></tr></table></figure><p>如果出现PASS则表示环境测试成功。</p><p><img src="https://img.picgo.net/2023/06/22/202306220226221a021c3cf198e518.png" alt="PASS"></p><h1 id="下一步计划"><a href="#下一步计划" class="headerlink" title="下一步计划"></a>下一步计划</h1><p>本篇博客完成了TinyRISC-V环境的搭建，并运行测试程序通过指令测试。下一阶段将详细介绍TinyRISC-V整体框架，并研究指令是如何在CPU中运行。此外还要研究TinyRISC-V仿真文件是如何运行、GUN编译工具是如何把C语言转换成RISC-V识别的指令码等。道阻且长，加油~</p>]]></content>
      
      
      <categories>
          
          <category> risc-v </category>
          
      </categories>
      
      
        <tags>
            
            <tag> risc-v </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXI内安装虚拟机（二）</title>
      <link href="/2023/06/18/ESXI/Esxi%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>/2023/06/18/ESXI/Esxi%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>上一章我们安装了ESXI虚拟化平台，本篇文章将在此平台上我们可以安装虚拟机，从而对虚拟机进行统一管理，此次我们选择安装<strong>Ubuntu22.04</strong>，用于跟随中科院一生一芯项目学习RISC-V。</p><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="创建虚拟机存储空间"><a href="#创建虚拟机存储空间" class="headerlink" title="创建虚拟机存储空间"></a>创建虚拟机存储空间</h2><p>首先需要给虚拟机创建一段存储空间，在左侧点击存储可以看到自己的所有存储空间，可以看到我的<strong>ESXI</strong>系统中已经创建了一个<strong>Rocky Linux</strong>的存储空间。</p><p><img src="https://img.picgo.net/2023/06/19/202306191611086dd949b5bebfa2f9.png" alt="ESXI存储界面"></p><p>接下来我们需要创建一个给<strong>ubuntu</strong>的存储空间，点击左上新建数据存储</p><p><img src="https://img.picgo.net/2023/06/19/202306191627441fbcaf7d2bd55525.png" alt="数据存储"></p><p>选择创建新的VMFS数据存储</p><p><img src="https://img.picgo.net/2023/06/20/202306201608294808dece8f8fbe54.png"></p><p>选择创建新的数据存储名称，这边我就命名<strong>Ubuntu</strong>。下方可以选择虚拟机存放的位置，我已经事先在<strong>VMware</strong>中单独给他开辟了300G的内存空间，然后选择下一页。</p><p><img src="https://img.picgo.net/2023/06/20/20230620160924fcf39cdb59273084.png" alt="数据存储命名"></p><p>直接选择下一页</p><p><img src="https://img.picgo.net/2023/06/20/202306201611305309d669afd3ae1c.png" alt="分区设置"></p><p>确定配置后直接选择完成即可</p><p><img src="https://img.picgo.net/2023/06/20/20230620161218955cff5d4bb16220.png" alt="确认配置"></p><p>配置完成后再ESXI的存储子页面即可看到给<strong>Ubuntu</strong>创建的新的存储空间。</p><p><img src="https://img.picgo.net/2023/06/20/2023062016142841070b908ceafc71.png"></p><p>点击数据存储浏览器即可访问开辟存储空间的内容。</p><p><img src="https://img.picgo.net/2023/06/20/20230620161734effbdb7fab3e9909.png" alt="浏览数据存储"><br>选择Ubuntu的空间，可以看到空间里除了虚拟机初始化文件其他都是空的，为了给虚拟机安装做准备，我们先在该空间上传<strong>Ubuntu</strong>镜像文件。</p><p><img src="https://img.picgo.net/2023/06/20/202306201618533a9bfa5187553d79.png" alt="Ubuntu空间浏览"></p><p>选择上载，选择本地的Ubuntu镜像，上传走的是TCP/IP协议，上传完成后可以看到存储空间内有了Ubuntu镜像。</p><p><img src="https://img.picgo.net/2023/06/20/2023062016255912b1b07c69c4e287.png" alt="上传镜像"></p><p>上述工作完成后即已创建一个Ubuntu的虚拟机存储空间，接下来我们进行虚拟机的安装。</p><h2 id="虚拟机安装"><a href="#虚拟机安装" class="headerlink" title="虚拟机安装"></a>虚拟机安装</h2><p>在<strong>ESXI</strong>左侧菜单栏选择虚拟机子菜单。可以看到，我的<strong>ESXI</strong>中已经存在了一个<strong>Rocky</strong>的虚拟机，接下来我们创建<strong>Ubuntu</strong>的虚拟机。</p><p><img src="https://img.picgo.net/2023/06/19/20230619153112be473eaa8d90ae72.png" alt="打开虚拟机页面"></p><p>选择左上角<strong>创建/注册虚拟机</strong>选项，第一个选项是创建新的虚拟机，第二个选项是移植现有的虚拟机，如果你有现成的虚拟机也可以通过该方式移植到<strong>ESXI</strong>系统。</p><p><img src="https://img.picgo.net/2023/06/20/20230620163248f1842b03c6c3f864.png" alt="创建新虚拟机"></p><p>下一届即是设置你的操作系统，主要包括虚拟机命名和虚拟机版本选择，这边按照自己的镜像选择，<strong>ESXI</strong>中没有<strong>Ubuntu</strong>的选项，选择其他<strong>Linux64</strong>位即可。</p><p><img src="https://img.picgo.net/2023/06/20/20230620163448d227fd9dfc927ecf.png"></p><p>下一页选择我们的存储空间，上一小节我们已经创建好了虚拟机空间，这边选择<strong>300G</strong>大小的<strong>Ubuntu</strong>存储空间即可。</p><p><img src="https://img.picgo.net/2023/06/20/20230620163748232a097eb3043176.png" alt="存储空间选择"></p><p>接下来则是配置虚拟机性能的设置，根据自己电脑的性能分配即可。在CD/DVD驱动器选项里选择数据存储ISO文件，然后选择上一章节在存储空间上传的Ubuntu ISO文件。</p><p><img src="https://img.picgo.net/2023/06/20/202306201647094f6d6a09201b13e9.png" alt="虚拟机设置"></p><p>设置完成后即可在虚拟机界面看到我们安装的<strong>Ubuntu</strong>虚拟机，然后点击开启电源即可进入<strong>Ubuntu</strong>系统的引导。至此我们便完成了<strong>ESXI</strong>中虚拟机的创建。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git的</title>
      <link href="/2023/06/13/Tools/git/"/>
      <url>/2023/06/13/Tools/git/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是Git"><a href="#什么是Git" class="headerlink" title="什么是Git"></a>什么是Git</h1><p>Git是一种分布式版本控制系统，它允许多人协同开发同一个项目，并管理代码的修改历史。使用Git，可以在本地对代码进行修改和提交，也可以与远程仓库交互，如拉取最新代码、推送修改等。</p><h2 id="Git的工作原理"><a href="#Git的工作原理" class="headerlink" title="Git的工作原理"></a>Git的工作原理</h2><p><img src="https://img.picgo.net/2023/06/13/20230613213706b0c016d4188ee3e1.png" alt="Git工作原理"><br>如上图所示，整个管理系统的主要分为四大部分：  </p><pre><code>Workspace：本地项目所在目录Index：暂存区Repository：初始化下当前所在的分支Remote：远程仓库</code></pre><h2 id="Git的配置"><a href="#Git的配置" class="headerlink" title="Git的配置"></a>Git的配置</h2><p>Git的安装非常简单，配置完成后鼠标右键打开Git的Termina设置用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email xxxxxx@mail.com</span><br></pre></td></tr></table></figure><h1 id="Git使用流程"><a href="#Git使用流程" class="headerlink" title="Git使用流程"></a>Git使用流程</h1><h2 id="Github仓库创建"><a href="#Github仓库创建" class="headerlink" title="Github仓库创建"></a>Github仓库创建</h2><p>网页打开github后在右上角即可创建远程仓库</p><p><img src="https://img.picgo.net/2023/06/13/20230613214703abe21a316f5241ad.png" alt="Github仓库创建"></p><p>仓库属性主要包括仓库的名称、仓库描述和仓库私有性设置，此外还可以设置添加README文件和License，设置完成后即创建了一个远程仓库。</p><p><img src="https://img.picgo.net/2023/06/13/202306132150390ef6cc230201b308.png" alt="仓库属性"></p><h2 id="Git本地工作区创建"><a href="#Git本地工作区创建" class="headerlink" title="Git本地工作区创建"></a>Git本地工作区创建</h2><p>在本地电脑创建一个本地工作区文件夹，例如AMBA_AXI_Library，然后右键打开Git Terminal输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://img.picgo.net/2023/06/13/20230613215547e97960d3e3336e80.png" alt="本地工作区初始化"><br>输入完成后，在本地会出现一个.git文件，该文件用于跟踪管理版本，千万不要删除该文件目录下的文件，否则可能会导致本地文件丢失。<br><img src="https://img.picgo.net/2023/06/13/2023061321581180ec5ac197f14eb0.png" alt=".git文件"></p><h2 id="本地文件上传Github"><a href="#本地文件上传Github" class="headerlink" title="本地文件上传Github"></a>本地文件上传Github</h2><h3 id="文件上传本地仓库"><a href="#文件上传本地仓库" class="headerlink" title="文件上传本地仓库"></a>文件上传本地仓库</h3><p>本地工作区创建文件后，例如ADD.v，然后打开Git Terminal，输入 git add即可需要上传文件。<br><img src="https://img.picgo.net/2023/06/13/2023061322051632aca5064212de7c.png" alt="添加文件"></p><p>添加文件后可以通过git status查看状态，由下图可以看到Git记录，我们创建了一个新文件ADD.v。<br><img src="https://img.picgo.net/2023/06/13/2023061322064923ecf9b96e7b2684.png" alt="查看状态"></p><p>使用git commit提交文件，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;注释&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img.picgo.net/2023/06/13/202306132211028d90c126f8a279b4.png" alt="本地提交"></p><h3 id="代码上传远程仓库"><a href="#代码上传远程仓库" class="headerlink" title="代码上传远程仓库"></a>代码上传远程仓库</h3><p>通过https协议，将本地仓库与Github远程仓库进行连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote add orgin https://github.com/illusioneeer/AMBA_AXI_Library</span><br><span class="line"># 查看远程分支</span><br><span class="line">git remote -v</span><br><span class="line"># 删除远程分支</span><br><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><p>如下图所示，即连接到远程github仓库并建立了origin分支</p><p><img src="https://img.picgo.net/2023/06/13/20230613221815a07599fe800d078c.png" alt="添加分支"></p><p>然后输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;本地分支&gt; &lt;远程分支&gt;</span><br><span class="line"># 将本地origin分支上传到远程的master分支</span><br><span class="line"># 远程仓库创建时默认自带master分支</span><br><span class="line">git push origin master</span><br><span class="line"># 如果输入指令-u 那么git则会记录push到远程分支的默认值</span><br><span class="line">git push -u origin master</span><br><span class="line"># 输入了-u后，下次直接将会默认将本地master分支上传到远程master分支</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><img src="https://img.picgo.net/2023/06/13/202306132231556671e6c46f928ee8.png" alt="上传成功"><br>在github的master分支下即可看到添加的add.v文件<br><img src="https://img.picgo.net/2023/06/13/20230613223334d4082e1849b8daee.png" alt="添加ADD.v文件"></p><h3 id="远程仓库克隆"><a href="#远程仓库克隆" class="headerlink" title="远程仓库克隆"></a>远程仓库克隆</h3><p>上传远程仓库后，即可在任意地方复制远程仓库文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone 远程仓库地址 [本地文件名称]</span><br><span class="line">git clone https://github.com/illusioneeer/AMBA_AXI_Library</span><br></pre></td></tr></table></figure><h2 id="其他常用指令"><a href="#其他常用指令" class="headerlink" title="其他常用指令"></a>其他常用指令</h2><table><thead><tr><th>操作</th><th>指令</th><th>注释</th></tr></thead><tbody><tr><td>删除文件</td><td>git rm ‘文件名’</td><td>删除后重新提交，远程仓库也会删除更新</td></tr><tr><td>文件重命名</td><td>git mv ‘原文件名’ ‘新文件名’</td><td>修改文件名后重新提交，远程仓库也会更新改名</td></tr><tr><td>文件路径修改</td><td>git mv ‘原文件名’ ‘新文件地址/新文件名’</td><td>修改后重新上传，远程仓库也会更新</td></tr><tr><td>还原操作失误文件</td><td>git checkout-文件名</td><td>文件名支持匹配，如果为*则欢迎目录下所有文件</td></tr><tr><td>还原追踪文件</td><td>git reset HEAD ‘文件名’</td><td>如果不添加HEAD则标识将所有的修改文件退回工作区</td></tr><tr><td>查看提交记录</td><td>git log</td><td>查看所有提交记录</td></tr><tr><td>查看某个分支提交记录</td><td>git log ‘分支’</td><td>查看该分支提交记录</td></tr><tr><td>查看文件提交记录</td><td>git log ‘文件名’</td><td>查看该分支提交记录</td></tr><tr><td>查看提交ID</td><td>git log –oneline</td><td>查看提交ID和提交注释</td></tr><tr><td>指定文件回退版本</td><td>git checkout ‘commitID’ ‘文件名’</td><td>将该文件回退到commitID</td></tr><tr><td>查看仓库分支</td><td>git branch</td><td>查看所有branch信息</td></tr><tr><td>删除仓库分支</td><td>git branch -d ‘分支名称’</td><td>删除该分支</td></tr></tbody></table><h2 id="ignore"><a href="#ignore" class="headerlink" title="ignore"></a>ignore</h2><p>当我们的项目中有些文件不希望上传到远程仓库时，例如编译文件、仿真结果等，可以使用gitignore，在本地文件目录下创建**.gitignore**文件，文件中的内容将不会上传到远程仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## 忽略folder目录，包括src/folder等子目录，此外还包括名字叫folder的文件</span><br><span class="line">folder</span><br><span class="line">## 忽略folder目录，包括src/folder等子目录，但是不包括名字叫folder的文件</span><br><span class="line">folder/</span><br><span class="line">## 仅忽略名字叫folder的文件，但是不会忽略名字叫folder_name的目录</span><br><span class="line">!folder/</span><br><span class="line">## 支持使用通配符,忽略目录如folder_rtl、folder_sim等</span><br><span class="line">folder_*/</span><br><span class="line">## 支持使用双**号表示多级目录</span><br><span class="line">folder/**/sim/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AMBA AXI Specification Introduction</title>
      <link href="/2023/06/06/AMBA/AXI/AXI_Spec/"/>
      <url>/2023/06/06/AMBA/AXI/AXI_Spec/</url>
      
        <content type="html"><![CDATA[<h1 id="AMBA-AXI介绍"><a href="#AMBA-AXI介绍" class="headerlink" title="AMBA AXI介绍"></a>AMBA AXI介绍</h1><p>AMBA（Advanced Microcontroller Bus Architecture） AXI（Advanced eXtensible Interface）是ARM公司推出的一种高性能、低延迟、可扩展的系统级总线标准，是AMBA总线协议中最新的一代,AMBA AXI的Specitication可以在<a href="https://developer.arm.com/documentation">官网</a>下载。</p><p>AMBA AXI协议支持高性能高频的系统设计，该协议拥有以下优点：</p><pre><code>适合高带宽和低延迟的设计不需要复杂的桥即可提供高频操作可以满足多种组件的接口需求适合高初始访问延迟的存储器控制器提供互联架构实现的灵活性向后兼容AHB与APB接口</code></pre><p>同时，该协议还拥有以下特点：</p><pre><code>分离的地址/控制和数据阶段通过使用字节选通信号的方式支持非对齐数据传输使用突发传输时只需要传输起始地址允许地址信息提前于实际数据传输发送分离的读写数据通道，这可以提供低损耗的DMA支持发出多个未完成的地址支持乱序传输完成允许简单添加寄存器阶段以提供时序收敛</code></pre><p>AXI协议同时包含了低功耗操作所需的信号扩展，也包含了AXI4-Lite协议，该协议是AXI4的子集，有着更简单的控制寄存器接口和组件。</p><h2 id="AXI结构"><a href="#AXI结构" class="headerlink" title="AXI结构"></a>AXI结构</h2><p>AXI是一种基于突发事务的总线协议，AXI一共有五个通道分别为：</p><ol><li>Read Address : 读地址通道，简称AR</li><li>Read Data : 读数据通道，简称R</li><li>Write Address : 写地址通道，简称AW</li><li>Write Data : 写数据通道，简称W</li><li>Write Response : 读响应通道，简称B</li></ol><p>其中可以分为两大类，地址通道和数据通道，地址通道携带需要传输数据的控制信息，数据通道进行数据的交互。AXI总线的两端分别为Master和Slave，可以根据地址通道或数据通道的方向来判断总线方向。<br>下图分别展示在读事务和写事务下，AXI各个通道的方向。<br><img src="https://img.picgo.net/2023/06/07/202306070010442b4cefc741704cd0.png" alt="Write Transaction"><br><img src="https://img.picgo.net/2023/06/07/20230607001214ee16676381ed18f1.png" alt="Read Transaction"><br> 在官方的文档中，ARM喜欢把AXI的两端命名成Manager和Subordinate，但是一般大家都叫Master和Slave。</p><h2 id="寄存器切片"><a href="#寄存器切片" class="headerlink" title="寄存器切片"></a>寄存器切片</h2><p> 第一次看文档并没有注意到Introduction章节有一小部分讲的是寄存器切片（Register Slice）,之后了解寄存器切片后再看文档中的这段话，有种豁然开朗的感觉，今后我会单独发布一篇关于Register Slice的博客。那么先让我们来看看原文是怎么说的：  </p><p> Each AXI channel transfers information in only one direction, and the architecture does not require any fixed relationship between the channels. These qualities mean that a register slice can be inserted at almost any point in any channel, at the cost of an additional cycle of latency.  </p><p> AXI的每个通道都只会往一个方向发送消息，并且这种结构并不要求各个通道间有固定的关系。这些特点意味着Register Slice可以被插入在AXI的任意通道，而代价只有一个周期的延迟。<br> 这段话后面还有一段注释：  </p><p>These qualities make the following possible:</p><ol><li>Trade-off between cycles of latency and maximum frequency of operation.</li><li>Direct, fast connection between a processor and high-performance memory, but to use simple register slices to isolate a longer path to less performance critical peripherals.</li></ol><p>首先我们可以简单定义这种特性：一种通道内数据流确定，且各个通道无固定关系的总线。<br>思索很久，词穷的我实在没有想到如何命名，那么可以求助强大的GPT。有一说一，感觉说的挺好^ ^。<br><img src="https://img.picgo.net/2023/06/07/20230607222309ac574544315eaa6e.png" alt="AXI特性"><br>继续上文翻译，AXI的这种无状态性，可以使得</p><ol><li>AXI可以在latency和操作的最大频率做权衡。</li><li>对于处理器和高性能内存之间可以进行直接、快速连接，对于性能要求不是很高外设的较长路径，可以通过简单的RegSlice进行隔离。</li></ol><p>如何分析以上两句话，首先对于第一句，我感觉Opreation这个词用的不是很对，如果换成implementation可能更好，我们都知道如果你要想综合出更高的频率，可以通过插入Pipe，这里的RegSlice其实和Pipe的功能有些类似，但是插入Pipe会带来Latency的增加，具体案例可以参考DDR4和DDR5，虽然DDR5的频率更高，但是代价就是Latency大。由此可以衍生出第二句话，不同Performance要求IP的权衡，对于高性能的IP例如Cache、内存这种可以让处理器通过AXI直接连接，使得Latency低，但是对于要求不高的IP可以使处理器距离IP远一点，如果综合不了就可以用RegSlice进行Timing的隔断，固然这也会使得Latency增加。</p><h1 id="AXI信号描述"><a href="#AXI信号描述" class="headerlink" title="AXI信号描述"></a>AXI信号描述</h1><p>AXI的信号描述按照通道进行分组。</p><h2 id="Write-address-channel"><a href="#Write-address-channel" class="headerlink" title="Write address channel"></a>Write address channel</h2><table><thead><tr><th>Name</th><th>Width</th><th>Desprition</th></tr></thead><tbody><tr><td>AWADDR</td><td></td><td>写地址，突发操作中第一次数据传出的地址</td></tr><tr><td>AWSIZE</td><td>[2:0]</td><td>突发大小，突发传输的传输字节大小</td></tr><tr><td>AWLEN</td><td>[7:0]</td><td>突发长度，突发传输的传输次数</td></tr><tr><td>AWBURST</td><td>[1:0]</td><td>突发类型，包括FIXED、INCR、WRAP</td></tr><tr><td>AWID</td><td></td><td>写地址ID，标识写事务的名称</td></tr><tr><td>AWLOCK</td><td>[0:0]</td><td>锁定类型，原子访问标识信号</td></tr><tr><td>AWPROT</td><td>[2:0]</td><td>保护类型，写入事务的保护属性</td></tr><tr><td>AWQOS</td><td>[3:0]</td><td>服务质量，标识写传输的优先级</td></tr><tr><td>AWREGION</td><td>[3:0]</td><td>区域标识，标识访问Slave的区域</td></tr><tr><td>AWUSER</td><td></td><td>用户定义信号，挂在AW通道的用户定义信号</td></tr><tr><td>AWVALID</td><td></td><td>Master标识给Slave的写地址通道数据有效</td></tr><tr><td>AWREADY</td><td></td><td>Slave标识给Master自身准备好接收写控制信号</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SD2.0控制器</title>
      <link href="/2023/06/06/Project/sd/"/>
      <url>/2023/06/06/Project/sd/</url>
      
        <content type="html"><![CDATA[<h1 id="TOLIST"><a href="#TOLIST" class="headerlink" title="TOLIST"></a>TOLIST</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>虚拟化系统ESXi安装（一）</title>
      <link href="/2023/05/16/ESXI/Esxi%E5%AE%89%E8%A3%85/"/>
      <url>/2023/05/16/ESXI/Esxi%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是ESXi？"><a href="#什么是ESXi？" class="headerlink" title="什么是ESXi？"></a>什么是ESXi？</h1><p><strong>ESXi</strong>全称<strong>VMware Esxi</strong>，是可直接安装在物理服务器上的强大的裸机管理系统，是一款虚拟软件；ESXi本身可以看做一个操作系统，采用Linux内核，安装方式为裸金属方式，可直接安装在物理服务器上，不需安装其他操作系统，它是专为运行虚拟机、最大限度降低配置要求简化部署而设计；通过直接访问并控制底层资源，ESXi能有效地对硬件进行分区，以便整合应用并降低成本。</p><h2 id="为什么要安装Esxi"><a href="#为什么要安装Esxi" class="headerlink" title="为什么要安装Esxi"></a>为什么要安装Esxi</h2><p><strong>ESXi</strong>本身可以看作一个<strong>Linux</strong>内核的操作系统，安装<strong>ESXi</strong>的目的主要是为了计算机硬件的统一管理。一般情况下我们在虚拟机中使用宿主机的硬件如<strong>PCIE</strong>等设备时需要在虚拟机中重新对硬件进行驱动和链接，假设宿主机器有多个虚拟机如<strong>Ubuntu</strong>、<strong>Centos</strong>等，如果我们想在这两个虚拟机内都使用宿主机上的<strong>PCIE</strong>接口连接<strong>FPGA</strong>，那么我们需要在单独在虚拟机内进行驱动和连接，但是<strong>ESXi</strong>是一个直接管理底层的操作系统，可以在底层进行硬件的直通功能，那么此时我们只需要在宿主机上进行了驱动，所有安装在<strong>ESXi</strong>上的虚拟机可以直接访问所有的宿主机外设，这大大简化了后续的工作量。此外，<strong>ESXi</strong>还是一个优秀的虚拟化管理工具，对于有多个服务器或虚拟机可以进行更好的管理。</p><h1 id="ESXi的安装"><a href="#ESXi的安装" class="headerlink" title="ESXi的安装"></a>ESXi的安装</h1><p>在<strong>VMware</strong>官网可以下载原生的<strong>ESXI</strong>镜像，在官网注册可以获取60天的软件试用。</p><h2 id="VMware中添加ESXi系统"><a href="#VMware中添加ESXi系统" class="headerlink" title="VMware中添加ESXi系统"></a>VMware中添加ESXi系统</h2><p>首先在<strong>VMware</strong>中添加虚拟机<br><img src="https://img.picgo.net/2023/05/16/202305162343471b1609c2e6467908.png" alt="添加虚拟机"><br>选择<strong>ESXi7.0</strong><br><img src="https://img.picgo.net/2023/05/16/202305162346396f8c4b59d2b66951.png" alt="兼容性选择"><br>此处选择从官网中下载的<strong>ESXi</strong>镜像<br><img src="https://img.picgo.net/2023/05/16/2023051623482711c4225a9b362ef0.png" alt="安装ISO镜像"><br>选择对应的版本<br><img src="https://img.picgo.net/2023/05/16/20230516235211c23eee07924c9f3b.png" alt="版本选择"><br>选择安装位置<br><img src="https://img.picgo.net/2023/05/16/202305162354238795375a28839966.png" alt="选择安装位置"><br>配置虚拟机处理器数量，根据自己时间电脑性能分配<br><img src="https://img.picgo.net/2023/05/16/2023051623552540486bf41264dcc3.png" alt="处理器核心分配"><br>配置虚拟机的内存<br><img src="https://img.picgo.net/2023/05/16/20230516235656efbf424ff2ac1b6f.png" alt="内存配置"><br>选择默认使用网络地址转换<br><img src="https://img.picgo.net/2023/05/16/202305162357483a499ff2c20d65e6.png" alt="网络类型选择"><br>虚拟化IO方式选择<br><img src="https://img.picgo.net/2023/05/16/20230516235829b044d819cbe1cbaa.png" alt="虚拟化IO选择"><br>磁盘类型选择默认<br><img src="https://img.picgo.net/2023/05/16/2023051623591327a4ffb8a363f8c6.png" alt="磁盘类型选择"><br>创建虚拟磁盘<br><img src="https://img.picgo.net/2023/05/16/202305162359538121ed9d6b62e339.png" alt="虚拟磁盘创建"><br>选择磁盘大小，大小根据自己硬件性能分配。然后选择将磁盘存储为单个文件，方便后续管理。<br><img src="https://img.picgo.net/2023/05/17/2023051700005767538b80e95763ac.png" alt="磁盘大小选择"><br>完成创建后打开虚拟机，打开虚拟机即可进入自动安装界面。<br><img src="https://img.picgo.net/2023/05/17/20230517000237fe879c6b38ed7f38.png" alt="虚拟机安装"><br>经过三四分钟的等待会进入该界面，选择<strong>Continue</strong>，然后选择<strong>F11</strong>继续<br><img src="https://img.picgo.net/2023/05/17/20230517000815f22a1d9644db0ae9.png" alt="Accept"><br>磁盘大小确认，然后<strong>Continue</strong><br><img src="https://img.picgo.net/2023/05/17/2023051700091394a3b0baf6487e15.png" alt="磁盘大小确认"><br>键盘布局确认，使用默认即可<br><img src="https://img.picgo.net/2023/05/17/20230517001011fef2f75976471073.png" alt="键盘布局"><br>创建<strong>ESXi</strong>的<strong>Root</strong>权限密码并确认<br><img src="https://img.picgo.net/2023/05/17/2023051700112586a3907e9dbbe874.png" alt="密码创建"><br>选择安装<br><img src="https://img.picgo.net/2023/05/17/20230517001237cf18d11c2a2f982f.png" alt="安装"><br>接下来继续进入安装引导程序<br><img src="https://img.picgo.net/2023/05/17/20230517001357e54afa20de4572a7.png" alt="安装引导"><br>安装完成后选择<strong>Reboot</strong><br><img src="https://img.picgo.net/2023/05/17/2023051700143348d60155b645faec.png" alt="Reboot"><br><strong>Reboot</strong>结束后，会进入该界面，该界面意思测试是否可以<strong>Ping</strong>通<strong>ESXi</strong><br><img src="https://img.picgo.net/2023/05/17/2023051700201916d579611cfb74e4.png" alt="Ping测试"><br>打开<strong>Termianl</strong>，然后<strong>Ping</strong>上图的<strong>IP</strong>地址，如果显示能连接且无丢包，那么则表示可以正常链路<br><img src="https://img.picgo.net/2023/05/17/20230517002259719d285d60ef5afb.png" alt="Terminal测试"><br><strong>Ping</strong>测试成功后，打开浏览器输入刚才的IP地址，会进入<strong>ESXi</strong>的管理系统界面，输入用户名和密码，用户名为<strong>Root</strong>，密码为在系统引导时创建的密码<br><img src="https://img.picgo.net/2023/05/17/2023051700243758ab728c2c6f80d9.png" alt="输入账号和密码"><br>输入完成后可以进入以下管理界面，该界面可以查看和管理自己的<strong>ESXi</strong>系统<br><img src="https://img.picgo.net/2023/05/17/20230517002633cb53e284ea18301b.png" alt="管理界面"></p><h2 id="To-List"><a href="#To-List" class="headerlink" title="To List"></a>To List</h2><ol><li>在ESXi中安装虚拟机系统</li><li>将PCIE设备直通给虚拟机</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>从零开始硬件加速(一)</title>
      <link href="/2023/05/10/Petalinux/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVitis%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F/"/>
      <url>/2023/05/10/Petalinux/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8BVitis%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p><strong>Vitis</strong>是<strong>Xilinx</strong>推出的一款统一软件平台，软件平台包括：</p><ol><li>全面的内核开发套件，可无缝构建加速应用</li><li>完整的硬件加速开源库，针对 <strong>AMD FPGA</strong> 和 <strong>Versal™ ACAP</strong> 硬件平台进行了优化</li><li>插入特定领域的开发环境，可直接在熟悉的更高层次框架中进行开发</li><li>不断发展的硬件加速合作伙伴库和预建应用生态系统</li><li><strong>Vitis Model Composer</strong> 是一款基于模型的设计工具，支持在<strong>MathWorks MATLAB®</strong> 和 <strong>Simulink®</strong> 环境中进行快速设计探索和验证，并加速 <strong>AMD</strong> 器件的量产。</li><li><strong>Vitis Networking P4</strong> 允许创建软定义网络。<strong>VitisNetP4</strong> 数据平面构建器生成的系统可以针对从简单的数据包分类到复杂的数据包编辑的各种数据包处理功能进行编程。</li></ol><p>目前软件发行了<strong>Windows</strong>和<strong>Linux</strong>两个版本，<strong>Windows</strong>主要针对硬件开发用户，而如果需要使用完整的<strong>AI</strong>硬件加速的完整功能，只能在<strong>Linux</strong>下实现，因此以下案例均以<strong>Linux</strong>为平台开发。</p><h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><p>开发环境选择VMware作为虚拟机，需要注意是的<strong>petalinux2018.3</strong>只支持<strong>ubuntu2018.3</strong>，之后的版本由于<strong>python</strong>工具包版本总是出问题，如果选择<strong>petalinux2018.3</strong>那么必须选择<strong>ubuntu2018.3</strong>，<br><strong>petalinux</strong>之后的版本支持全系列<strong>ubuntu</strong>版本。理论上支持<strong>centos</strong>环境，但是需要打很多驱动比较繁琐，此处就不折腾了。下载<a href="https://ubuntu.com/">ubuntu</a> 推荐上官网，此处选择版本<strong>ubuntu22.04 LTS (Long Tern Support)</strong><br>,顾名思义软件安装包将得到更长的支持。<br><img src="https://img.picgo.net/2023/03/28/unbuntu67969e279a219d9b.png" alt="Ubuntu下载"></p><p>下载好<strong>Ubuntu</strong>镜像后在<strong>VMware</strong>中创建虚拟机。<br><img src="https://img.picgo.net/2023/03/28/a5f82be0aba6a4b46648406ec1546b6b3864390df1d24b34.png" alt="创建虚拟机"><br>然后选择此处稍后安装操作系统。<br><img src="https://img.picgo.net/2023/03/29/fc1f7b380bf3767c841e1f69f1e475595ecffdb0ffa661d0.png" alt="稍后安装操作系统"><br>选择正确的<strong>Ubuntu</strong>系统。<br><img src="https://img.picgo.net/2023/03/29/linuxa62ebba9218592cd.png" alt="选择正确Ubuntu系统"><br>选择虚拟机名称和安装路径，需要注意的是虚拟机名称不是<strong>Ubuntu</strong>的<strong>User</strong>名，而是<strong>VMware</strong>中看到的名称，一个用户可能安装多个虚拟机，以此作为区分。<br><img src="https://img.picgo.net/2023/03/29/ubuntu10ff3451ab804029c.png" alt="安装路径选择"><br>选择虚拟机的大小(<strong>后期发现200g的磁盘空间根本不够用，Vitis2022软件相比之前版本大了很多，建议至少500G往上)，建议将虚拟机文件存储为单个文件，这样容易维护。<br><img src="https://img.picgo.net/2023/03/29/e5e04c11ff858a2bb939c97f56611710ef82bf798e6cf6cf.png" alt="选择虚拟机分配空间大小"><br>根据自己电脑的性能分配虚拟机的内存和处理器的多少，然后在CD/DVD处选择下载好的</strong>Ubuntu<strong>镜像。<br><img src="https://img.picgo.net/2023/03/29/b6e034cedbdb5c629deaff52639f90bfba224709cc6643af.png" alt="定义虚拟机性能"><br>之后打开虚拟机即可安装</strong>Ubuntu**。<br><img src="https://img.picgo.net/2023/03/29/ubuntu3d90089c6a458442.png" alt="选择安装ubuntu"><br>语言选择建议选择英文，整个虚拟机中不需要出现中文。<br><img src="https://img.picgo.net/2023/03/29/16607b9b8c54203950b89a0656dd5905f0aa8850d21285b8.png" alt="语言选择"><br>建议将安装Ubuntu时更新去掉。<br><img src="https://img.picgo.net/2023/03/29/7874e25f68339ba440ce3a96c459c53f41f49c837c684bf8.png" alt="普通设置"><br>清除整个磁盘，这边直接选择清除，磁盘空间本来就是VM刚创建的空间，没有文件。<br><img src="https://img.picgo.net/2023/03/29/951ae78cbcfd091b83fe07e96fb120394f50d1370bec0945.png" alt="清除整个磁盘"><br>创建用户，设置密码，然后进入各种包的安装环节，直接安装即可。<br><img src="https://img.picgo.net/2023/03/29/4ff462119d2baec7063450ef5c3e5b04993c397007d6a085.png" alt="创建用户"></p><h3 id="Ubuntu换源"><a href="#Ubuntu换源" class="headerlink" title="Ubuntu换源"></a>Ubuntu换源</h3><p><strong>Ubuntu</strong>的服务器在国外，因此下载速度很慢，可以更换国内源。国内有很多<strong>Ubuntu</strong>的镜像源，包括阿里的、网易的，还有很多教育网的源，比如：清华源、中科大源。镜像源一定要下载一定的<strong>Ubuntu</strong><br>版本比如本案例使用的<strong>Ubuntu 22.04</strong>。此处使用清华源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>安装步骤如下：</p><ol><li>备份原始源文件</li><li>修改源文件权限</li><li>更换源</li><li>源更新</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak #将默认源镜像备份</span><br><span class="line">sudo chmod 777 /etc/apt/sourceslist                     #修改镜像文件权限</span><br><span class="line">sudo vi /etc/apt/sources.list                           #修改镜像文件</span><br></pre></td></tr></table></figure><p>将所有默认源删除后，添加上方清华源，然后执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update    # 源更新</span><br><span class="line">sudo apt upgrade   </span><br></pre></td></tr></table></figure><h3 id="Ubuntu22-04不兼容VMtools"><a href="#Ubuntu22-04不兼容VMtools" class="headerlink" title="Ubuntu22.04不兼容VMtools"></a>Ubuntu22.04不兼容VMtools</h3><p><strong>Ubuntu 22.04</strong>默认安装了<strong>VMtools</strong>，因此安装完成后可以实现虚拟机的分辨率缩放，但是无法实现win和虚拟机之间文件互传拖拽问题。解决方案如下：<br>先卸载自带的<strong>VMtools</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --purge remove open-vm-tools           ##完全卸载open-vm-tools</span><br><span class="line">sudo apt-get --purge remove open-vm-tools-desktop   ##完全卸载open-vm-tools-desktop</span><br></pre></td></tr></table></figure><p>然后重新安装<strong>VMtools</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install open-vm-tools                  ##重新安装open-vm-tools</span><br><span class="line">sudo apt-get install open-vm-tools-desktop          ##重新安装open-vm-tools-desktop</span><br></pre></td></tr></table></figure><p>启动<strong>VMtools</strong>服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start open-vm-tools.service               ##启动VMtools服务</span><br></pre></td></tr></table></figure><p>设置<strong>VMtools</strong>开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable open-vm-tools.service              ##设置Vmtools开机自启</span><br></pre></td></tr></table></figure><p>检查<strong>VMtools</strong>状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status open-vm-tools.service              ##检测Vmtools状态</span><br></pre></td></tr></table></figure><p>如果两个都是<strong>enable</strong>都是打开状态下，则表示服务已经开启。<br><img src="https://img.picgo.net/2023/03/30/Vmtools7e20f75b0dff7fee.png" alt="Vmtools状态"><br>安装完成后发现分辨率自适应正常，但是还是无法拖拽文件。接下来则需要安装两个文件实现。<br> 1.gnome-shell-extension-prefs<br> 2.nemo<br>首先在<strong>Terminal</strong>输入一下命令安装两个软件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gnome-shell-extension-prefs</span><br><span class="line">sudo apt install nemo</span><br></pre></td></tr></table></figure><p>然后打开<strong>extension</strong>将<strong>Desktop icons NG</strong>选项关闭。<br><img src="https://img.picgo.net/2023/03/30/extensionb5483f5bec083396.png" alt="extension设置"><br>然后打开<strong>start application preference</strong>添加如下命令：<br><img src="https://img.picgo.net/2023/03/30/start-application-preference3d0c3ba701a09ad3.png" alt="start application preference设置"><br>安装完成后<strong>reboot</strong>，然后发现可以首先虚拟机和<strong>Windows</strong>之间互相拖拽传文件。</p><h2 id="Vitis安装"><a href="#Vitis安装" class="headerlink" title="Vitis安装"></a>Vitis安装</h2><p><strong>Vitis</strong>安装同样推荐<a href="https://china.xilinx.com/">官网</a>安装。此处记得选择软件开发者，硬件开发者的功能在<strong>Windows</strong>下即可实现，而大多数和<strong>AI</strong>加速相关的功能只能在Linux下实现。<br><img src="https://img.picgo.net/2023/03/29/Vitis7d497a97f84860f1.png" alt="Vitis下载"><br>一定要下载<strong>Linux</strong>版本，而且是<strong>Bin</strong>版本。<br><img src="https://img.picgo.net/2023/03/30/Vitis1eac9aa2dc8fff4e.png" alt="Vitis版本"><br>安装完成后将<strong>Bin</strong>文件拖拽到虚拟机，然后打开<strong>Terminal</strong>运行：<br><img src="https://img.picgo.net/2023/03/30/Vitis84addc881d88d1b4.png" alt="Vits安装程序"><br>填写Xilinx账号和密码：<br><img src="https://img.picgo.net/2023/03/30/Xilinx1074135d6832ab3a.png" alt="Xilinx账号密码"><br>选择<strong>Vitis</strong>，如果想要实现完整的功能必须安装<strong>Vitis</strong>。<br><img src="https://img.picgo.net/2023/03/30/Vitisb4e967a6c26009ee.png" alt="选择Vitis"><br>版本安装Vitis和Vivado是必须的，然后器件推荐<strong>Versal ACAP</strong>去掉，这个型号器件不太常用。<br><img src="https://img.picgo.net/2023/03/30/fc51d3887ccca7380b808a3bf745fdf30b9ae1948a1bb819.png" alt="器件选择"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">########################### Synopsys ###############################</span><br><span class="line">#Set Synopsys Directory</span><br><span class="line">export Synopsys_Dir=/opt/synopsys</span><br><span class="line">#SCL</span><br><span class="line">export SCL_HOME=$Synopsys_Dir/scl/2021.03</span><br><span class="line">export PATH=$SCL_HOME/linux64/bin:$PATH</span><br><span class="line">#SNPSLMD_LICENSE_FILE</span><br><span class="line">export SNPSLMD_LICENSE_FILE=30000@qingteng</span><br><span class="line">#fm</span><br><span class="line">export fm_HOME=$Synopsys_Dir/fm/Q-2019.12-SP2</span><br><span class="line">export PATH=$fm_HOME/bin:$PATH</span><br><span class="line">#hspice</span><br><span class="line">export hspice_HOME=$Synopsys_Dir/hspice/S-2021.09</span><br><span class="line">export PATH=$hspice_HOME/hspice/bin:$PATH</span><br><span class="line">#icc2</span><br><span class="line">export icc2_HOME=$Synopsys_Dir/icc2/R-2020.09-SP1</span><br><span class="line">export PATH=$icc2_HOME/bin:$PATH</span><br><span class="line">#lc</span><br><span class="line">export lc_HOME=$Synopsys_Dir/lc/R-2020.09-SP3</span><br><span class="line">export PATH=$lc_HOME/bin:$PATH</span><br><span class="line">#prime</span><br><span class="line">export prime_HOME=$Synopsys_Dir/prime/R-2020.09-SP4</span><br><span class="line">export PATH=$prime_HOME/bin:$PATH</span><br><span class="line">#spyglass</span><br><span class="line">export spyglass_HOME=$Synopsys_Dir/spyglass/P-2019.06-SP1-1</span><br><span class="line">export PATH=$spyglass_HOME/SPYGLASS_HOME/bin:$PATH</span><br><span class="line">#syn</span><br><span class="line">export syn_HOME=$Synopsys_Dir/syn/R-2020.09-SP4</span><br><span class="line">export PATH=$syn_HOME/bin:$PATH</span><br><span class="line">#vcs</span><br><span class="line">export VCS_HOME=$Synopsys_Dir/vcs/Q-2020.03-SP2-7</span><br><span class="line">export PATH=$VCS_HOME/bin:$PATH</span><br><span class="line">export NOVAS_HOME=$Synopsys_Dir/verdi/R-2020.12-SP1</span><br><span class="line">export VCS_TARGET_ARCH=amd64 # set vcs full64</span><br><span class="line">#verdi</span><br><span class="line">export VERDI_HOME=$Synopsys_Dir/verdi/R-2020.12-SP1</span><br><span class="line">export PATH=$VERDI_HOME/bin:$PATH</span><br><span class="line">#wv</span><br><span class="line">export wv_HOME=$Synopsys_Dir/wv/S-2021.09</span><br><span class="line">export PATH=$wv_HOME/bin:$PATH</span><br><span class="line">alias lms=&quot;/opt/synopsys/scl/2021.03/linux64/bin/lmgrd -c /opt/synopsys/license/license.dat -l /</span><br><span class="line">alias lmd=&quot;/opt/synopsys/scl/2021.03/linux64/bin/lmdown -c /opt/synopsys/license/license.dat&quot;</span><br><span class="line">#export FLEXLM_DIAGNOSTICS=10 # check for license missing feature</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vitis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PetaLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Specification中参数解释</title>
      <link href="/2023/05/10/FlexNoC/Specification/"/>
      <url>/2023/05/10/FlexNoC/Specification/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="9398e373828593c2f4724e1b76cc8032d2e6c6074b5a3bbb90790d4f19675049">80dc21da5b8f6e6f72586dcf1bdf618d0120a71b014adc2a63f2b5b1cf578734de7840987c201cc93b34790cb4bf2daaf875d5e44c9fcdfc12e404389fa454ea986f93cb8d847a3fc5b8baa29d5ae690d5c31c9b8c061216d661cba21f7cc7b13b03ca7936656a7ef9aaa694c2ce3dba7cd1d94b16a3ebba9b53645bbe7a3434b6abe90f43a0aac256b098c9ce5840c71790dd0ef3993d55205d03efd87c519b3d45376eb3f4a1e775791af29f61215d44b0a55066c0ed13a4cf9370e2cfc4ce6fed29db1e3e41dec5a37e1be19a9803a662cdee4d013c6636db26b0cdfd1a4a2ca7dedb70205505e5b5d42c5619dc49ddb91aa97c1e526ff7d277613775ff74085cda3db10972c4c14d44a2322cf1e08fabf35f8912a01a9366d857b6c53779e3af179e72b50cc081e2011e1c9a6c0367fb14ab6c83014ae5db503552a526dcd287b8949880f327315291856012c77f3b3b652acbda713cbe7131e8dda43c00fbd33fc6be6c1b54efa183c8feb53b5f56dc14a15d64101a1ce696d07cb4faed4135978f2b5b2cf6c34123e9bbe24e1cff6adc09121e4d88f740cc0792585926a65f38b4038dad818189e07e07c2637481f078ebbb5587b18f7356f197121d8c8aa53dff024aec8b843e5e41bdf6d791e1522ad0a7ed19a78cce21978dcafe72ab6e317e5d5d7a1393178a7a3112e858480c771b7cbf2f76cdf755910e26d03a193edc442a70db6719e4ddd4676e612adb4ea4ea822f4e885fef13cf0a9dba27d86b88c4b35eee32c1a97bd19889b2c0e35082dda0e8051dd13cbb3162e33437f7a10cc1b1e2173281ba4b733090d62d49ec19c4e8c015eab5133abeba24db6137293b5398832a0417dfca9cfa69be39530fea1987edd22c78c6e354183391651cba2ec76159da1ad4f4d584b61d15654daed32417630bbfa2a1645092812280bc46353a9d0c00818029eff5ebed48c1ef2b5a57f88667e1084544166f6cb3f66b12df2e7238ebb2c6ca513aec98ae61a96e92d65d2f9d7b549e1bd15b0e04c13b65b1503a530603cbf9d2b05f461418736ef7945dbc7369b7b420884eae389a9230361a1a8b22f53cc5f973c49239cb32790f0f16f7a930a641904e5244d2c8d1b07a411fc54f32bd4ee179f6123427e68b9cad6460245213cc37a37cde7ff3122480d17c2314acf74ffc571e3b1a377e12551c078bcecd09e77e911f51e8a7d23e5b5c40e0a4b5c60486265a8638d7ce411b2a3a5693cab3aadea0a774871803b2b8b5f60674df6aff46e2aa47a1684843d3e5724ad4be206d8bb4521af1697609900077f444b4094e0a6e01c713a26b14920599801aef4f8ad81d6ee72e9c3aec48831e5f38fba20d91fb734dac4ad755d86c75da985a7326e301bc1aba2c245f0feb9a240b9c3055d172a6236a51c4cd01a21d5919ba1e13a135b9af9cdeb16fe26cb5087ccdfca0a3f7e8596c672e9faf85682da4c916f57f361318660aa7fc221b9376b58b7571de1d02fcf60fcaa7da63b334c5834274dfd40155b148994fa0da7e451be21d5b1da714eb626fc763b0077866b78284f7651c801935c2ca62215d9b1bc03098dbec5f03ba41cb21ba2791339a3653e62f6a08e4153163bb2fffa2ca8b96f9b5a0f26b177aeff55bd1c7a8c364667d601b731e050f4e77094d9c7790ac98a6bd5ed0bbdd35a09d607707926a3a99430377c3a3b4d3c2acdbfc670379486c0efca4c2e453867ed03974b18127ecd823ebed42658654cd3d2f41ce58d0c155df6d3bcd23bf87dc182df6f4f1bc16ef69b3a67284c94456e56b408afcf983ef9003bbb15d120937231491fac7b83601615ea31d0c3c48dcbda65d00a04cb57019f09cca6c5d27d68052a474766160611eb796870cd0109c259c422956fa9c7dd4a4ac5ebb10713f298d36979b01574617a7c4050d6549ca61f95baa98d415ecd082adc380c506922862e8c5e0aa6404de77f30334533882ec5dcdd059993dcf785d396492d675d602d3bcf1742ae44d731819e65d595f6b1e2808a3156fa0ceb8c0b8cd8d2454439ee5053b31a7132c2ba07ae35e4e0cd221e1feb373eefbc1b6caa352666c20dc032e94548114d638e48ad67ce62277451b632e6c442a4fd32ca25e4e0d1d5e253aef9f90678f36c1899f8b1061d1e103c54d2c892621f514887fb9020555660f5c55eb06b511e90493c21e92914090fc976289a1cb2e9e484be24a3da2a125b3ad7b40d65a4a93f7333335abe70e655e383ead040e15bebb7577b1775f4b147d329b2179575e1eeb7d5e6ffd05d196ede52f7c13908d73402b613ee40d4f716607fe8e6052a10bdf206fe9aea6d6217ac18c20ac7ba29ef6e962511d77c5a01f0b70974e6d24349c5f65caaef6718cf736d6a19c06b1e582cc387064c11c2df513165b46158a2f3ac21abd839541e10d6f784d871f887c46ca35979fefb9db121a17f56e1cdb342e433825b714338b90fd373d93620e055921e5db59646e50cfc857a48d12851a7feb8521e8182ccaa5adb246369335cd026d37fbc54c8a50a12dd77bd7b40ebe2c82640838e195ef6ec3def11721e3b13e8d3f423cf978d136155fc345547de0cada34402e0426f5ccc4dc46c1efd1e02a97c95dbf2e73372de28c48ca4c5fa2f963929cd8d70c667f1da081568ed888858c431e55ccbe2f49049fbeab562be4781e0524e48e5547db8034ccf95484cfc56386ea3e6b088822425a8d54058fda3a5ccef67ddf39751aefb9a937a541caf7c2e303822d09a9328c7edecff509fa68953423f9748b7e3689cc319351ebef90e4c096a96fe3578f83b52a8c93311bb8d413b0366b5a9708b88249fd2a8ff699d3edc67be36e42a9907e3e2a907650adc000f17ccddb393726d236803f84cbaa2c5eb17dd48acdb656f16203d7746ce3cfda329c00c0073713a1fce3cb2ccecca055d6cbac93f6a3eedca3836e629812ecfd6eecf64b54ffeab75c7f832d9c9bb6719c942c7795fe47f793ea8c484052fa5d9b73752426750e7413e28b7bbb830f8f6846b98f695090f0a809cddc8fad545cf4734932df366aa63688d81c6183757cd950cbb2d02b0813ce5fefeee6b118bf95ff986b7d6d8c07743f293d3c89ff8f456f6698b067fa20d5dcff4b80d8f91e012e757a18731693a62ef431c95bf818b9bd0b7e0fc7a9b0974c494379422d50c4c9b990aa835f61ad905b0d4a509b57c6df645fc47beba4df46097fa76ae41964800a51544bd72485cac08c298313382667b7742d903254ed1ea1e2f806433c7345c6dd651c236512c659affe30d1fe0c0a30e3b70fae3ba06d8f3d222ad62aa0891b42925f9d4183e191587d65f78d640f1163e051fee131f3c15f16d540da733a7a420cea99c031d13c68207611600bfdc5a6d3c1c1f5cad8fc961dfc18497264ed9e95ddc4496ccbb71c1f574a3bcf815ae3ff776cd213f6aa1dd4a87a1126794ab2ca05be8eaa464273cd8dc25bfa91c24de07808790e4dd03fb42fd6cb1d9b4abe6b90d4c21d7505f83ab7f13f641cf6fd9fc3f85633cd8b733c483a2240e76a3a1caa5bb6f007cfdeedd9db333902a1ed212e4714d0c2c8193974cfa5d35e4bc6acc91f44b4c5c1b9f7ce3868d96a5dc4803c42efa37b3aeff30e44116b0676d74bf102c7b4aaeb616625fd1ca01ed7e175144ffe24906e40c714996a8fb0e99527e47d982c06abac606a9e97a77f55f4ac397edf888df7baee1a9786ef0336a495db54e29799180991fbfa8c743b6b811468993fa4377881e867be68616fbf01379a7f695d666874986485aad542a27461bbb94738bb4a7c7bc3f641b8f76aaaa88bce29968a5af760c04b673578017e6de9c0310b24518c5de00a13e63ad919ad3d8561ffcf6f3110490c1e5098c036edd430142894d943e72994e0ff0ec2e38c9b43436c9db7ec4d76585f03ead2507b1056fd022c8df81cdb51d6346a2ab8ffd1634ea3f8be5ffb88bf86a480c4f096db745620e2332754eafc7d9a3da6031d1ad939704499a338b257c9091048710e511427f3a34154f3e96b8e08903cf237e7e6b4e333c34494b80ed7b7e43ead598502705d96a4a3d4bf64ddc6ae6f906286ff348ece4f3d0946f3b0f2e1ad3a75a595e607efc56dd94bb1d0b9d4766ad9eaaaf103f44b6635a41769766cd352d7209845508e17829c01ce8dd4ef18034fbb1f8bf8471321eb9471ce77d7999a52ea0a98faae3dd63f55e6b87b1705f90ef2483b121db80d5eb8f0d47954e5203426f334dc78cd64924c56cc9b730fc474f03f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> FlexNoC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arteris FlexNoC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2023/05/10/Markdown/"/>
      <url>/2023/05/10/Markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>  Markdown中使用 # 来表示标题，一级标题使用一个 # 号，二级标题使用两个 # 号，以此类推。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br></pre></td></tr></table></figure><p>显示效果如下所示</p><p><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/%E6%A0%87%E9%A2%98%E6%98%BE%E7%A4%BA.png" alt="标题显示"></p><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>Markdown段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。Markdown段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><p>当然也可以再段落后面使用一个空行来表示重新开始的一个段落。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/10/hello-world/"/>
      <url>/2023/05/10/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="welcone"><a href="#welcone" class="headerlink" title="welcone"></a>welcone</h1><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>Hellow world</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span></span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hellow world!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="第一章节"><a href="#第一章节" class="headerlink" title="第一章节"></a>第一章节</h2><p>Test!!！<br>123你好呀###！@#！@#</p><h3 id="第一一章节"><a href="#第一一章节" class="headerlink" title="第一一章节"></a>第一一章节</h3><p>content.oneone</p><h2 id="第二章节"><a href="#第二章节" class="headerlink" title="第二章节"></a>第二章节</h2><p>content.two</p><h3 id="第二二章节"><a href="#第二二章节" class="headerlink" title="第二二章节"></a>第二二章节</h3><p>content.twotwo</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> add</span><br><span class="line">(</span><br><span class="line">    a,</span><br><span class="line">    b,</span><br><span class="line">    c</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">parameter</span> ADD_WIDTH = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [ADD_WIDTH-<span class="number">1</span>:<span class="number">0</span>] a;</span><br><span class="line">    <span class="keyword">input</span> [ADD_WIDTH-<span class="number">1</span>:<span class="number">0</span>] b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> c = a + b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">parameter</span> ADD_WIDTH = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> [ADD_WIDTH-<span class="number">1</span>:<span class="number">0</span>] a;</span><br><span class="line">    <span class="keyword">input</span> [ADD_WIDTH-<span class="number">1</span>:<span class="number">0</span>] b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c; <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c; <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c; <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c; <span class="keyword">output</span> [ADD_WIDTH:<span class="number">0</span>] c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> c = a + b;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>你是刷 Visa 还是 UnionPay</p><span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">is demo  </button><span class="hide-content">demo</span></span><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note green no-icon flat"><p>最讨厌的浏览器没有之一</p></div><h2 id="PICTURE-TEST"><a href="#PICTURE-TEST" class="headerlink" title="PICTURE TEST"></a>PICTURE TEST</h2><p>11<br><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/test%E7%BD%91%E7%AB%99%E8%83%8C%E6%99%AF.png" alt="TEST"></p><p><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/test%E7%BD%91%E7%AB%99%E8%83%8C%E6%99%AF1.png" alt="TEST2"></p><p><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/testtestTest.png" alt="11"></p><p><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/testTest.png" alt="22"></p><p><img src="http://rkqdxur5d.hd-bkt.clouddn.com/blog/test%E7%BD%91%E7%AB%99%E8%83%8C%E6%99%AF.png" alt="22"></p><p><img src="https://raw.githubusercontent.com/illusioneeer/Blog.PicGo/main/img/20221103031648.png" alt="33"></p><h1 id="章节测试"><a href="#章节测试" class="headerlink" title="章节测试"></a>章节测试</h1><pre><code>章节测试log</code></pre><h1 id="章节测试-1"><a href="#章节测试-1" class="headerlink" title="章节测试"></a>章节测试</h1><pre><code>章节测试点</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Gvim使用指南</title>
      <link href="/2023/05/10/GVIM/"/>
      <url>/2023/05/10/GVIM/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="d71e71877d20e6ce3c539dfbe7e934459f1b3bea3de96933add19570dbda11b3">ec75b7249c09138dd13abbfb7a543f42cfb68aaeb58e993df8b6bcbe4531cb9097dc72f2c2726f9197a8afab8df035b641e7529e6af2c26de0a79b9658adfa7150eee01347e1b458ca132169b47195ce5f9ec042e7e1edb8e4f2cef94a5faa23523f95c5421a465672952731d9ed72223cf64fa93d822b8fabc8360e4007a960432fb16b2a094ac99ccc0dd01e445e2ee98c68959d809686f1a495de9fe48d7ad6ebfe7888835c82f3475eae1774e088025964da959a943e969e54ce03067ab2aff6fdeeda9928c800faefe9191a2a6910b4f811ab9a502f51ba27389d86de3930f6da59831d994c6afc0d37e70155f23425afe55f58c4639c1098e6f561b5192d5609f04cba0f45b6608be3d4b872426d47bad87f316b8553ac91dfe359f2d2ded54d38d0a08436894cd88f0296b6f8d9253b3d89afc763c672255fe7cd777cfc688c58c3357f51d1ae704e4d76f811e184fa3af797aba2b2bc9078ad47e3bf56d293b290ab6fb03dd2a7a0204541f55e6a74e53b73aff54d92732db8382ec4d06ff5b91c3a44ad7fe0e2750bd3815d5c8976d4ac8fbc1a71bafde772a2fc3b6752eab07185d6a9b3db1dcf2e1b62c60d91fe0e69be93e95deb1f227d7f1542c5b7eb1dd1df29d0166b36ef0424dc1d6435abe006054a34bebf0789ad7864a5d2bd016b17d13715eeff70ba214150994b335a6623992af376a0f7e477181abb117f6cbf459ea387b1d5a2f5a2daa9eea4e6dc4e5442d88b540b5b992b9e59e745f237327009f8c3297cbd6cd32e31e068445f40ca8855d5eada5dd9b200345a59d9939994e2a4c054ac40f7624ae8b89995a32c7a2a44c6f98294f4014bec8f026e54ac50c08a0c85c6db54494797e6986defac1987ff976f391033707ef8ca1104730bc5067306a10397a0a9f7eebac2750d530d54d3f0bb80f21f1f5f38b1ad688f5c8d0052e3ac13f17696eb7f227841fdbcb3026f747c50817469a6432ec555d033ff6f61efbc04ddc9bd0a0db129e47bc053609a337945df8f1d33d2311404694adf894d6faeaa3f92da60ff362ae48681f91627f6be2f745298e2b5d4dfdc031db5ab68c935bb8203eb98514b603932fe6742da2d44388b6bfc81006c91825b03ee06981103b2d94557792502d72e4cfc5b557f981d079c9324b6888436255e8483af607d937038d04a5bde4868e5cefadb035f40bd1546b582ccd3c787fc57e98409057d91496de0da39854e4405b2c7e8eab9e7da7f49a8471e405869ce7ce04bd8598b299651ca755122e4a79b976827e77d0850796c3ccb059cacb9d21b8cd937028822d391b13851de4e308027fca7d4a4bf8ee1f8af66c9aff8a6602071df36644afe87ac7b228a45340c9d200355b7b0df7108cf835b989bec3cea2f339480dc22701319d3eddf3813b4043cbdd9b3d8a59acb889e2ceee72616016328104ce51f62f120e72416076af93729089991be1f6383153ffd50df2379facf29d26a76e21f6050b6de92bf3241448943b9b1f3ee49acf6d360fbaf0aff3661b84607845fdab1ea3388e7cad5f65767dce7a454f46445575eb758c2f7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">正在施工，请回避</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
